{"version":3,"sources":["Module/PrimaryComponent.js","App.js","index.js"],"names":["PrimaryComponent","React","useState","folderID","setFolderID","tempFolderName","setTempFolderName","tempSubFolderName","setTempSubFolderName","folder","setFolder","subFolderTab","setSubFolderTab","subFolderID","setSubFolderID","subFolderName","setSubFolderName","addFolder","e","tempData","name","id","console","log","type","placeholder","value","onChange","event","target","onClick","header","field","body","rowdata","className","length","openfolder","buttonlabel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAoHeA,EA7GU,WAAO,IAAD,EACMC,IAAMC,SAAS,GADrB,mBACpBC,EADoB,KACVC,EADU,OAEkBH,IAAMC,SAAS,cAFjC,mBAEpBG,EAFoB,KAEJC,EAFI,OAGwBL,IAAMC,SAAS,kBAHvC,mBAGpBK,EAHoB,KAGDC,EAHC,OAICN,mBAAS,CAAC,KAJX,mBAIpBO,EAJoB,KAIZC,EAJY,OAKOR,mBAAS,CAAC,KALjB,gCAMaA,oBAAS,IANtB,gCAOaA,oBAAS,IAPtB,mBAOpBS,EAPoB,KAONC,EAPM,OAQeV,mBAAS,CAAC,KARzB,gCASWA,mBAAS,IATpB,mBASpBW,EAToB,KASPC,EATO,OAUeZ,mBAAS,IAVxB,mBAUpBa,EAVoB,KAULC,EAVK,KAgCrBC,EAAU,SAACC,GACb,GAAsB,KAAnBb,EAAsB,CACrBD,EAAYD,EAAS,GACrB,IAAIgB,EAAS,CAACC,KAAKf,EAAgBgB,GAAGlB,GACtCO,EAAU,GAAD,mBAAKD,GAAL,CAAYU,KACrBb,EAAkB,mBAGlBgB,QAAQC,IAAI,SAuBpB,OACI,6BACA,8BAGA,6BAEI,2BAAOH,KAAK,eAAZ,wBACA,2BAAOI,KAAK,OAAOH,GAAG,aAAaI,YAAY,mBAAmBC,MAAOrB,EAAgBsB,SA7CxE,SAACC,GACtBtB,EAAkBsB,EAAMC,OAAOH,UA6C3B,4BAASI,QAASb,GAAlB,UAEA,6BACI,6BACI,6BACI,kBAAC,YAAD,CAAWS,MAAOjB,GACd,kBAAC,SAAD,CAAQsB,OAAO,KAAKP,KAAM,SAASQ,MAAM,OACzC,kBAAC,SAAD,CAAQD,OAAO,OAAOP,KAAM,OAAOQ,MAAM,SACzC,kBAAC,SAAD,CAAQC,KAzBL,SAACC,GACxB,OACI,kBAAC,SAAD,CAAQV,KAAK,SAAUW,UAAU,cAAcL,QAAS,kBAZ7C,SAACI,GACM,KAAnB7B,GAAyBA,EAAe+B,OAAO,IAC9CxB,GAAgB,GAChBE,EAAeoB,EAAQb,IACvBL,EAAiBkB,EAAQd,OAQqCiB,CAAWH,IAAUI,YAAa,IAC5F,uBAAGH,UAAU,sBA6BhBxB,GACG,6BACI,iDAAuBI,EAAvB,IAAuCF,EAAvC,OACA,2BAAOO,KAAK,eAAZ,4BACA,2BAAOI,KAAK,OAAOH,GAAG,aAAaI,YAAY,mBAAmBC,MAAOnB,EAAmBoB,SArEhF,SAACC,GACzBpB,EAAqBoB,EAAMC,OAAOH,UAqEtB,4BAASI,QAASb,GAAlB,c,MCvFLsB,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCDNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b2989230.chunk.js","sourcesContent":["import { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport React, { useState } from 'react';\r\nimport { Button } from \"primereact/button\";\r\n\r\n\r\n\r\nconst PrimaryComponent = () => {\r\n    const [folderID, setFolderID] =  React.useState(0);\r\n    const [tempFolderName, setTempFolderName] =  React.useState(\"new folder\");\r\n    const [tempSubFolderName, setTempSubFolderName] =  React.useState(\"new sub folder\");\r\n    const [folder, setFolder] = useState([{}]);\r\n    const [subFolder, setSubFolder] = useState([{}]);\r\n    const [addFolderBox, setAddFolderBox] = useState(false);\r\n    const [subFolderTab, setSubFolderTab] = useState(false);\r\n    const [subFolderData, setSubFolderData] = useState([{}]);\r\n    const [subFolderID, setSubFolderID] = useState(0);\r\n    const [subFolderName, setSubFolderName] = useState('');\r\n    let folderName=\"\"\r\n\r\n\r\n    const addButton=()=>{\r\n        if(addFolderBox===true){\r\n            setAddFolderBox(false)\r\n        }else{\r\n            setAddFolderBox(true)\r\n        }\r\n    }\r\n\r\n    const subFolderNameFunction=(event)=>{\r\n        setTempSubFolderName(event.target.value)\r\n    }\r\n\r\n    const folderNameFunction=(event)=>{\r\n        setTempFolderName(event.target.value)\r\n    }\r\n\r\n\r\n\r\n    const addFolder=(e)=>{\r\n        if(tempFolderName !== ''){\r\n            setFolderID(folderID+1)\r\n            let tempData={name:tempFolderName ,id:folderID}\r\n            setFolder([...folder,tempData]);\r\n            setTempFolderName(\"new folder\")\r\n\r\n        }else{\r\n            console.log('else')\r\n        }\r\n    };\r\n\r\n\r\n    const openfolder = (rowdata) => {\r\n        if(tempFolderName !== '' && tempFolderName.length>1) {\r\n            setSubFolderTab(true)\r\n            setSubFolderID(rowdata.id)\r\n            setSubFolderName(rowdata.name)\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const actionBodyTemplate = (rowdata) => {\r\n        return (\r\n            <Button type=\"button\"  className=\"edit-button\" onClick={() => openfolder(rowdata)} buttonlabel={\"\"}>\r\n                <i className=\"icon-edit\"></i>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div>\r\n            {/*{renderFolders()}*/}\r\n        </div>\r\n        <div>\r\n\r\n            <label name=\"folder-name\">Add new Folder here:</label>\r\n            <input type=\"text\" id=\"add-folder\" placeholder=\"type folder name\" value={tempFolderName} onChange={folderNameFunction}/>\r\n            <button  onClick={addFolder} >Create</button>\r\n\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        <DataTable value={folder}>\r\n                            <Column header=\"id\" type= 'number' field=\"id\"/>\r\n                            <Column header=\"name\" type= 'text' field=\"name\"/>\r\n                            <Column body={actionBodyTemplate}/>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {subFolderTab && (\r\n                <div >\r\n                    <h2>|| You are inside {subFolderName} {subFolderID} ||</h2>\r\n                    <label name=\"folder-name\">Add new sub Folder here:</label>\r\n                    <input type=\"text\" id=\"add-folder\" placeholder=\"type folder name\" value={tempSubFolderName} onChange={subFolderNameFunction}/>\r\n                    <button  onClick={addFolder} >Create</button>\r\n\r\n                    {/*<div>*/}\r\n                        {/*<DataTable value={subFolder}>*/}\r\n                            {/*<Column header=\"id\" type= 'number' field=\"id\"/>*/}\r\n                            {/*<Column header=\"name\" type= 'text' field=\"name\"/>*/}\r\n                        {/*</DataTable>*/}\r\n                    {/*</div>*/}\r\n\r\n                 </div>)}\r\n\r\n        </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default PrimaryComponent;\r\n","import React from \"react\";\nimport PrimaryComponent from \"./Module/PrimaryComponent.js\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <PrimaryComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}